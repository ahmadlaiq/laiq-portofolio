---
type Props = {
  title: string;
  description?: string;
  href: string;
  date?: string;
  tags?: string[];
};

const { href, title, description, date, tags } = Astro.props;
---

<a class="card" href={href} target="_blank" rel="noopener noreferrer">
  <h2>{title}</h2>
  {description && <p>{description}</p>}
  {date && <p class="small">{date}</p>}
  {
    tags && (
      <div class="tag-container">
        {tags.map((tag) => (
          <span class="tag">{tag}</span>
        ))}
      </div>
    )
  }
</a>

<style>
  .card {
    display: block;
    padding: 1.5rem;
    margin: 0.5rem 0;
    border: none;
    background-color: transparent;
    transition: background-color 0.5s ease-out;
  }
  .card:hover {
    background-color: #fff;
    border: none;
    border-radius: 5px;
    box-shadow: 0px 10px 15px -22px rgba(0, 0, 0, 0.1);
  }

  h2 {
    font-size: 1.7rem;
    font-weight: 500;
  }
  p {
    padding: 0.3rem 0;
    line-height: 1.8;
  }
  .small {
    font-size: 1.4rem;
  }
  .tag-container {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
  }
  .tag {
    font-size: 1.3rem;
    padding: 3px 10px;
    background-color: #dfdfdf;
    margin-right: 10px;
    border-radius: 50px;
    white-space: nowrap;
    display: block;
  }
  @media (prefers-color-scheme: dark) {
    .card:hover {
      background: #2a2a2a;
    }
  }
  /* Dark mode settings  */
  @media screen and (max-width: 640px) {
    .card {
      padding: 2rem 0;
    }
    .card:hover {
      background-color: transparent;
      border: none;
      box-shadow: none;
    }
    @media (prefers-color-scheme: dark) {
      .card:hover {
        background-color: transparent;
      }
    }
  }
  @media (prefers-color-scheme: dark) {
    .tag {
      background-color: #414141;
    }
  }
</style>
